version: '3'

# letencrypt config copied from 
# https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71

services:
  db:
    image: postgres
    container_name: DjangoSitePostgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network

  webapp:
    build: ./mysite_project
    container_name: DjangoSiteDjango
    command: gunicorn -w 3 -b :8000 site_core.wsgi
    volumes:
      - mysite_project:/code/
      - static_volume:/var/www/django/static
      - media_volume:/var/www/django/media
    env_file:
      - ../django_secret_key.txt
    networks:
      - nginx_network
      - postgres_network
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: DjangoSiteNginx
    restart: unless-stopped
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - static_volume:/var/www/django/static
      - media_volume:/var/www/django/media
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - webapp
    networks:
      - nginx_network

  certbot:
    image: certbot/certbot
    container_name: DjangoSiteCertbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


volumes:
  postgres_data:
  mysite_project:
  static_volume:
  media_volume:


networks:
  nginx_network:
    driver: bridge
  postgres_network:
    driver: bridge
